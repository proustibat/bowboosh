/**
 * bowboosh - Simple boilerplate with gulp, bower, bootstrap sass, font-awesome, bootswatch themes
 * @version v1.0.0
 * @link https://github.com/proustibat/bowboosh
 * @license MIT
 */
!function(n,e){"function"==typeof define&&define.amd?define(["MyModule_amd","App_amd"],e):"object"==typeof exports?module.exports=e(require("MyModule_cjs"),require("App_cjs")):n.App=e(n.MyModule_glob,n.App_glob)}(this,function(n,e){"use strict";function e(){var n={uid:null,container:null,init:function(){this.uid=this.guid(),console.log("Hello App ["+this.uid+"]"),this.container=document.body.getElementsByClassName("js-jumbotron-container")[0],this.container.innerHTML="<p>"+this.container.innerHTML+"Hello UMD APP ["+this.uid+"] </p>"},sayHello:function(){console.log("App.sayHello ["+this.uid+"]"),this.container.innerHTML="<p>"+this.container.innerHTML+"App.sayHello</p>"},createModules:function(){console.log("App.createModules"),this.container.innerHTML="<p>"+this.container.innerHTML+"App.createModule</p>";var n=new window.MyModule;n.init();var e=new window.MyModule;e.init(),n.sayHello(),e.sayHello()},guid:function(){return this.s4()+this.s4()+"-"+this.s4()+"-"+this.s4()},s4:function(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}};return n.init(),n}return e});
!function(i,t){"function"==typeof define&&define.amd?define(["MyModule_amd","App_amd"],t):"object"==typeof exports?module.exports=t(require("MyModule_cjs"),require("App_cjs")):i.MyModule=t(i.MyModule_glob,i.App_glob)}(this,function(i,t){"use strict";function i(){this.uid=null,this.container=null,this.init=function(){this.uid=this.guid(),console.log("Hello MyModule ["+this.uid+"]"),this.container=document.body.getElementsByClassName("js-jumbotron-container")[0],this.container.innerHTML="<p>"+this.container.innerHTML+"Hello Module ["+this.uid+"] </p>"},this.sayHello=function(){console.log("MyModule.sayHello ["+this.uid+"]"),this.container.innerHTML="<p>"+this.container.innerHTML+"Module.sayHello ["+this.uid+"] </p>"},this.guid=function(){return this.s4()+this.s4()+"-"+this.s4()+"-"+this.s4()},this.s4=function(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}}return i});
//# sourceMappingURL=data:application/json;base64,
