/**
 * bowboosh - Simple boilerplate with gulp, bower, bootstrap sass, font-awesome, bootswatch themes
 * @version v1.0.0
 * @link https://github.com/proustibat/bowboosh
 * @license MIT
 */
!function(n,e){"function"==typeof define&&define.amd?define(["MyModule_amd","App_amd"],e):"object"==typeof exports?module.exports=e(require("MyModule_cjs"),require("App_cjs")):n.App=e(n.MyModule_glob,n.App_glob)}(this,function(n,e){"use strict";function e(){var n={uid:null,container:null,init:function(){this.uid=this.guid(),console.log("Hello App ["+this.uid+"]"),this.container=document.body.getElementsByClassName("js-jumbotron-container")[0],this.container.innerHTML="<p>"+this.container.innerHTML+"Hello UMD APP ["+this.uid+"] </p>"},sayHello:function(){console.log("App.sayHello ["+this.uid+"]"),this.container.innerHTML="<p>"+this.container.innerHTML+"App.sayHello</p>"},createModules:function(){console.log("App.createModules"),this.container.innerHTML="<p>"+this.container.innerHTML+"App.createModule</p>";var n=new window.MyModule;n.init();var e=new window.MyModule;e.init(),n.sayHello(),e.sayHello()},guid:function(){return this.s4()+this.s4()+"-"+this.s4()+"-"+this.s4()},s4:function(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}};return n.init(),n}return e});
!function(i,t){"function"==typeof define&&define.amd?define(["MyModule_amd","App_amd"],t):"object"==typeof exports?module.exports=t(require("MyModule_cjs"),require("App_cjs")):i.MyModule=t(i.MyModule_glob,i.App_glob)}(this,function(i,t){"use strict";function i(){this.uid=null,this.container=null,this.init=function(){this.uid=this.guid(),console.log("Hello MyModule ["+this.uid+"]"),this.container=document.body.getElementsByClassName("js-jumbotron-container")[0],this.container.innerHTML="<p>"+this.container.innerHTML+"Hello Module ["+this.uid+"] </p>"},this.sayHello=function(){console.log("MyModule.sayHello ["+this.uid+"]"),this.container.innerHTML="<p>"+this.container.innerHTML+"Module.sayHello ["+this.uid+"] </p>"},this.guid=function(){return this.s4()+this.s4()+"-"+this.s4()+"-"+this.s4()},this.s4=function(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}}return i});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFwcC5qcyIsIm15TW9kdWxlLmpzIl0sIm5hbWVzIjpbInJvb3QiLCJmYWN0b3J5IiwiZGVmaW5lIiwiYW1kIiwiZXhwb3J0cyIsIm1vZHVsZSIsInJlcXVpcmUiLCJBcHAiLCJNeU1vZHVsZV9nbG9iIiwiQXBwX2dsb2IiLCJ0aGlzIiwiTXlNb2R1bGUiLCJ1aWQiLCJjb250YWluZXIiLCJpbml0IiwiZ3VpZCIsImNvbnNvbGUiLCJsb2ciLCJkb2N1bWVudCIsImJvZHkiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwiaW5uZXJIVE1MIiwic2F5SGVsbG8iLCJjcmVhdGVNb2R1bGVzIiwibW9kdWxlMSIsIndpbmRvdyIsIm1vZHVsZTIiLCJzNCIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsInRvU3RyaW5nIiwic3Vic3RyaW5nIl0sIm1hcHBpbmdzIjoiQ0FBRSxTQUFTQSxFQUFNQyxHQUNPLGtCQUFYQyxTQUF5QkEsT0FBT0MsSUFDekNELFFBQVEsZUFBZ0IsV0FBWUQsR0FDUixnQkFBWkcsU0FDaEJDLE9BQU9ELFFBQVVILEVBQVFLLFFBQVEsZ0JBQWlCQSxRQUFRLFlBRTFETixFQUFLTyxJQUFNTixFQUFRRCxFQUFLUSxjQUFlUixFQUFLUyxXQUU5Q0MsS0FBTSxTQUFTQyxFQUFVSixHQUMzQixZQU1BLFNBQVNBLEtBRUwsR0FBSUEsSUFFQUssSUFBSyxLQUNMQyxVQUFXLEtBQ1hDLEtBQU0sV0FDRkosS0FBS0UsSUFBTUYsS0FBS0ssT0FDaEJDLFFBQVFDLElBQUssY0FBZ0JQLEtBQUtFLElBQU0sS0FDeENGLEtBQUtHLFVBQVlLLFNBQVNDLEtBQUtDLHVCQUF3QiwwQkFBNEIsR0FDbkZWLEtBQUtHLFVBQVVRLFVBQVksTUFBUVgsS0FBS0csVUFBVVEsVUFBWSxrQkFBb0JYLEtBQUtFLElBQU0sVUFHakdVLFNBQVUsV0FDTk4sUUFBUUMsSUFBSyxpQkFBbUJQLEtBQUtFLElBQU0sS0FDM0NGLEtBQUtHLFVBQVVRLFVBQVksTUFBUVgsS0FBS0csVUFBVVEsVUFBWSxvQkFFbEVFLGNBQWUsV0FDWFAsUUFBUUMsSUFBSyxxQkFDYlAsS0FBS0csVUFBVVEsVUFBWSxNQUFRWCxLQUFLRyxVQUFVUSxVQUFZLHNCQUU5RCxJQUFJRyxHQUFVLEdBQUlDLFFBQU9kLFFBQ3pCYSxHQUFRVixNQUVSLElBQUlZLEdBQVUsR0FBSUQsUUFBT2QsUUFDekJlLEdBQVFaLE9BRVJVLEVBQVFGLFdBQ1JJLEVBQVFKLFlBRVpQLEtBQU0sV0FDRixNQUFPTCxNQUFLaUIsS0FBT2pCLEtBQUtpQixLQUFPLElBQU1qQixLQUFLaUIsS0FBTyxJQUFNakIsS0FBS2lCLE1BRWhFQSxHQUFJLFdBQ0EsTUFBT0MsTUFBS0MsTUFBNkIsT0FBckIsRUFBSUQsS0FBS0UsV0FDeEJDLFNBQVUsSUFDVkMsVUFBVyxJQUl4QixPQURBekIsR0FBSU8sT0FDR1AsRUFJWCxNQUFPQTtDQzNETCxTQUFTUCxFQUFNQyxHQUNPLGtCQUFYQyxTQUF5QkEsT0FBT0MsSUFDekNELFFBQVEsZUFBZ0IsV0FBWUQsR0FDUixnQkFBWkcsU0FDaEJDLE9BQU9ELFFBQVVILEVBQVFLLFFBQVEsZ0JBQWlCQSxRQUFRLFlBRTFETixFQUFLVyxTQUFXVixFQUFRRCxFQUFLUSxjQUFlUixFQUFLUyxXQUVuREMsS0FBTSxTQUFTQyxFQUFVSixHQUMzQixZQUNBLFNBQVNJLEtBRUxELEtBQUtFLElBQU0sS0FDWEYsS0FBS0csVUFBWSxLQUNqQkgsS0FBS0ksS0FBTyxXQUNSSixLQUFLRSxJQUFNRixLQUFLSyxPQUNoQkMsUUFBUUMsSUFBSyxtQkFBcUJQLEtBQUtFLElBQU0sS0FDN0NGLEtBQUtHLFVBQVlLLFNBQVNDLEtBQUtDLHVCQUF3QiwwQkFBNEIsR0FDbkZWLEtBQUtHLFVBQVVRLFVBQVksTUFBUVgsS0FBS0csVUFBVVEsVUFBWSxpQkFBbUJYLEtBQUtFLElBQU0sVUFHaEdGLEtBQUtZLFNBQVcsV0FDWk4sUUFBUUMsSUFBSyxzQkFBd0JQLEtBQUtFLElBQU0sS0FDaERGLEtBQUtHLFVBQVVRLFVBQVksTUFBUVgsS0FBS0csVUFBVVEsVUFBWSxvQkFBc0JYLEtBQUtFLElBQU0sVUFFbkdGLEtBQUtLLEtBQU8sV0FDUixNQUFPTCxNQUFLaUIsS0FBT2pCLEtBQUtpQixLQUFPLElBQU1qQixLQUFLaUIsS0FBTyxJQUFNakIsS0FBS2lCLE1BRWhFakIsS0FBS2lCLEdBQUssV0FDTixNQUFPQyxNQUFLQyxNQUE2QixPQUFyQixFQUFJRCxLQUFLRSxXQUN4QkMsU0FBVSxJQUNWQyxVQUFXLElBTXhCLE1BQU9yQiIsImZpbGUiOiJtYWluLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIjsoZnVuY3Rpb24ocm9vdCwgZmFjdG9yeSkge1xuICBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7XG4gICAgZGVmaW5lKFsnTXlNb2R1bGVfYW1kJywgJ0FwcF9hbWQnXSwgZmFjdG9yeSk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KHJlcXVpcmUoJ015TW9kdWxlX2NqcycpLCByZXF1aXJlKCdBcHBfY2pzJykpO1xuICB9IGVsc2Uge1xuICAgIHJvb3QuQXBwID0gZmFjdG9yeShyb290Lk15TW9kdWxlX2dsb2IsIHJvb3QuQXBwX2dsb2IpO1xuICB9XG59KHRoaXMsIGZ1bmN0aW9uKE15TW9kdWxlLCBBcHApIHtcbid1c2Ugc3RyaWN0Jztcbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqXG4gKiBNT0RVTEUgRVhBTVBMRVxuICpcbiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuZnVuY3Rpb24gQXBwKCkge1xuXG4gICAgdmFyIEFwcCA9IHtcblxuICAgICAgICB1aWQ6IG51bGwsXG4gICAgICAgIGNvbnRhaW5lcjogbnVsbCxcbiAgICAgICAgaW5pdDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdGhpcy51aWQgPSB0aGlzLmd1aWQoKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCAnSGVsbG8gQXBwIFsnICsgdGhpcy51aWQgKyAnXScgKTtcbiAgICAgICAgICAgIHRoaXMuY29udGFpbmVyID0gZG9jdW1lbnQuYm9keS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCAnanMtanVtYm90cm9uLWNvbnRhaW5lcicgKVsgMCBdO1xuICAgICAgICAgICAgdGhpcy5jb250YWluZXIuaW5uZXJIVE1MID0gJzxwPicgKyB0aGlzLmNvbnRhaW5lci5pbm5lckhUTUwgKyAnSGVsbG8gVU1EIEFQUCBbJyArIHRoaXMudWlkICsgJ10gPC9wPic7XG5cbiAgICAgICAgfSxcbiAgICAgICAgc2F5SGVsbG86IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCAnQXBwLnNheUhlbGxvIFsnICsgdGhpcy51aWQgKyAnXScgKTtcbiAgICAgICAgICAgIHRoaXMuY29udGFpbmVyLmlubmVySFRNTCA9ICc8cD4nICsgdGhpcy5jb250YWluZXIuaW5uZXJIVE1MICsgJ0FwcC5zYXlIZWxsbzwvcD4nO1xuICAgICAgICB9LFxuICAgICAgICBjcmVhdGVNb2R1bGVzOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyggJ0FwcC5jcmVhdGVNb2R1bGVzJyApO1xuICAgICAgICAgICAgdGhpcy5jb250YWluZXIuaW5uZXJIVE1MID0gJzxwPicgKyB0aGlzLmNvbnRhaW5lci5pbm5lckhUTUwgKyAnQXBwLmNyZWF0ZU1vZHVsZTwvcD4nO1xuXG4gICAgICAgICAgICB2YXIgbW9kdWxlMSA9IG5ldyB3aW5kb3cuTXlNb2R1bGUoKTtcbiAgICAgICAgICAgIG1vZHVsZTEuaW5pdCgpO1xuXG4gICAgICAgICAgICB2YXIgbW9kdWxlMiA9IG5ldyB3aW5kb3cuTXlNb2R1bGUoKTtcbiAgICAgICAgICAgIG1vZHVsZTIuaW5pdCgpO1xuXG4gICAgICAgICAgICBtb2R1bGUxLnNheUhlbGxvKCk7XG4gICAgICAgICAgICBtb2R1bGUyLnNheUhlbGxvKCk7XG4gICAgICAgIH0sXG4gICAgICAgIGd1aWQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnM0KCkgKyB0aGlzLnM0KCkgKyAnLScgKyB0aGlzLnM0KCkgKyAnLScgKyB0aGlzLnM0KCk7XG4gICAgICAgIH0sXG4gICAgICAgIHM0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gTWF0aC5mbG9vciggKDEgKyBNYXRoLnJhbmRvbSgpKSAqIDB4MTAwMDAgKVxuICAgICAgICAgICAgICAgIC50b1N0cmluZyggMTYgKVxuICAgICAgICAgICAgICAgIC5zdWJzdHJpbmcoIDEgKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgQXBwLmluaXQoKTtcbiAgICByZXR1cm4gQXBwO1xufTtcblxuXG5yZXR1cm4gQXBwO1xufSkpO1xuIiwiOyhmdW5jdGlvbihyb290LCBmYWN0b3J5KSB7XG4gIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcbiAgICBkZWZpbmUoWydNeU1vZHVsZV9hbWQnLCAnQXBwX2FtZCddLCBmYWN0b3J5KTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkocmVxdWlyZSgnTXlNb2R1bGVfY2pzJyksIHJlcXVpcmUoJ0FwcF9janMnKSk7XG4gIH0gZWxzZSB7XG4gICAgcm9vdC5NeU1vZHVsZSA9IGZhY3Rvcnkocm9vdC5NeU1vZHVsZV9nbG9iLCByb290LkFwcF9nbG9iKTtcbiAgfVxufSh0aGlzLCBmdW5jdGlvbihNeU1vZHVsZSwgQXBwKSB7XG4ndXNlIHN0cmljdCc7XG5mdW5jdGlvbiBNeU1vZHVsZSgpIHtcblxuICAgIHRoaXMudWlkID0gbnVsbDtcbiAgICB0aGlzLmNvbnRhaW5lciA9IG51bGw7XG4gICAgdGhpcy5pbml0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLnVpZCA9IHRoaXMuZ3VpZCgpO1xuICAgICAgICBjb25zb2xlLmxvZyggJ0hlbGxvIE15TW9kdWxlIFsnICsgdGhpcy51aWQgKyAnXScgKTtcbiAgICAgICAgdGhpcy5jb250YWluZXIgPSBkb2N1bWVudC5ib2R5LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoICdqcy1qdW1ib3Ryb24tY29udGFpbmVyJyApWyAwIF07XG4gICAgICAgIHRoaXMuY29udGFpbmVyLmlubmVySFRNTCA9ICc8cD4nICsgdGhpcy5jb250YWluZXIuaW5uZXJIVE1MICsgJ0hlbGxvIE1vZHVsZSBbJyArIHRoaXMudWlkICsgJ10gPC9wPic7XG5cbiAgICB9O1xuICAgIHRoaXMuc2F5SGVsbG8gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCAnTXlNb2R1bGUuc2F5SGVsbG8gWycgKyB0aGlzLnVpZCArICddJyApO1xuICAgICAgICB0aGlzLmNvbnRhaW5lci5pbm5lckhUTUwgPSAnPHA+JyArIHRoaXMuY29udGFpbmVyLmlubmVySFRNTCArICdNb2R1bGUuc2F5SGVsbG8gWycgKyB0aGlzLnVpZCArICddIDwvcD4nO1xuICAgIH07XG4gICAgdGhpcy5ndWlkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zNCgpICsgdGhpcy5zNCgpICsgJy0nICsgdGhpcy5zNCgpICsgJy0nICsgdGhpcy5zNCgpO1xuICAgIH07XG4gICAgdGhpcy5zNCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIE1hdGguZmxvb3IoICgxICsgTWF0aC5yYW5kb20oKSkgKiAweDEwMDAwIClcbiAgICAgICAgICAgIC50b1N0cmluZyggMTYgKVxuICAgICAgICAgICAgLnN1YnN0cmluZyggMSApO1xuICAgIH07XG59XG5cblxuXG5yZXR1cm4gTXlNb2R1bGU7XG59KSk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
